<?php
// src/PPE/GSBBundle/Entity/VisiteurRepository.php
namespace PPE\GSBBundle\Entity;

use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

class VisiteurRepository extends EntityRepository
{
	/**
	 * \brief
	 * 		Retourne un Visiteur d'apres son nom d'utilisateur
	 * 		(Prenom.Nom)
	 * \param 
	 * 		string $username
	 * \throws 
	 * 		NotFoundException
	 * \return 
	 * 		PPE\GSBBundle\Entity\Visiteur
	 */
    public function findOneByUsername($username)
    {
    	$nompren = preg_split("/\./", $username);
    	$prenom = $nompren[0];
    	$nom = $nompren[1];
    	
        $q = $this->_em->createQuery('
        		SELECT vis 
        		FROM PPE\GSBBundle\Entity\Visiteur vis, PPE\GSBBundle\Entity\Collaborateur c 
        		WHERE vis.matriculeColVis = c.matriculeCol
        		AND	  c.nomCol = :nom
        		AND	  c.prenomCol = :prenom	
        		')->setParameters( array('nom' => $nom, 'prenom' => $prenom) );

        try
        {
            $user = $q->getSingleResult();
        }
        catch (NoResultException $e)
        {
            throw new NoResultException(sprintf('Unable to find an active admin Visiteur object identified by "%s".', $username), 0, $e);
        }

        return $user;
    }
    
    public function findOneByMatricule($matricule)
    {
    	$q = $this
            ->createQueryBuilder('u')
            ->where('u.matriculeColVis = :matricule')
            ->setParameter('matricule', $matricule)
            ->getQuery();
    	try
    	{
    		$user = $q->getSingleResult();
    	}
    	catch (NoResultException $e)
    	{
    		throw new NoResultException(sprintf('Unable to find an active admin Visiteur object identified by "%s".', $username), 0, $e);
    	}
    
    	return $user;
    }
}
?>